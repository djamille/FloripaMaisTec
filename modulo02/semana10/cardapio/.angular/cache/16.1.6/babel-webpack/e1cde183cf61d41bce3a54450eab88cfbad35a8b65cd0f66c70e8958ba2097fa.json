{"ast":null,"code":"import { COMIDAS_MOCK } from \"src/app/mocks/comida-mock\";\nimport { BEBIDAS_MOCK } from \"src/app/mocks/bebida-mock\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass ServiceService {\n  constructor(http) {\n    this.http = http;\n    this.comidaLista = COMIDAS_MOCK;\n    this.bebidasLista = BEBIDAS_MOCK;\n  }\n  getComidas() {\n    return this.http.get(\"http://localhost:3000/comidas\");\n    // return of(this.comidaLista).pipe(delay(5000)); // chamada API\n  }\n\n  getBebidas() {\n    return this.http.get(\"http://localhost:3000/bebidas\");\n    // return of(this.bebidasLista); // chamada API\n  }\n\n  postBebida(bebida) {\n    return this.http.post(\"http://localhost:3000/bebidas\", bebida);\n  }\n}\nServiceService.ɵfac = function ServiceService_Factory(t) {\n  return new (t || ServiceService)(i0.ɵɵinject(i1.HttpClient));\n};\nServiceService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ServiceService,\n  factory: ServiceService.ɵfac,\n  providedIn: 'root'\n});\nexport { ServiceService };","map":{"version":3,"names":["COMIDAS_MOCK","BEBIDAS_MOCK","ServiceService","constructor","http","comidaLista","bebidasLista","getComidas","get","getBebidas","postBebida","bebida","post","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\djami\\FloripaMaisTec\\modulo02\\semana10\\cardapio\\src\\app\\shared\\service\\service.service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\nimport { Observable, delay, of } from \"rxjs\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { ComidaItem } from \"src/app/shared/models/comida-item.model\";\nimport { BebidaItem } from \"src/app/shared/models/bebida-item.model\";\nimport { COMIDAS_MOCK } from \"src/app/mocks/comida-mock\";\nimport { BEBIDAS_MOCK } from \"src/app/mocks/bebida-mock\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ServiceService {\n  comidaLista: ComidaItem[] = COMIDAS_MOCK;\n  bebidasLista: BebidaItem[] = BEBIDAS_MOCK;\n\n  constructor(private http: HttpClient) {}\n\n  getComidas(): Observable<ComidaItem[]> {\n    return this.http.get<ComidaItem[]>(\"http://localhost:3000/comidas\");\n    // return of(this.comidaLista).pipe(delay(5000)); // chamada API\n  }\n\n  getBebidas(): Observable<BebidaItem[]> {\n    return this.http.get<ComidaItem[]>(\"http://localhost:3000/bebidas\");\n    // return of(this.bebidasLista); // chamada API\n  }\n\n  postBebida(bebida: BebidaItem): Observable<void> {\n    return this.http.post<void>(\"http://localhost:3000/bebidas\", bebida);\n  }\n}\n"],"mappings":"AAKA,SAASA,YAAY,QAAQ,2BAA2B;AACxD,SAASC,YAAY,QAAQ,2BAA2B;;;AAExD,MAGaC,cAAc;EAIzBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAHxB,KAAAC,WAAW,GAAiBL,YAAY;IACxC,KAAAM,YAAY,GAAiBL,YAAY;EAEF;EAEvCM,UAAUA,CAAA;IACR,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAe,+BAA+B,CAAC;IACnE;EACF;;EAEAC,UAAUA,CAAA;IACR,OAAO,IAAI,CAACL,IAAI,CAACI,GAAG,CAAe,+BAA+B,CAAC;IACnE;EACF;;EAEAE,UAAUA,CAACC,MAAkB;IAC3B,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAO,+BAA+B,EAAED,MAAM,CAAC;EACtE;;AAlBWT,cAAc,C;mBAAdA,cAAc,EAAAW,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAdd,cAAc,C;SAAdA,cAAc;EAAAe,OAAA,EAAdf,cAAc,CAAAgB,IAAA;EAAAC,UAAA,EAFb;AAAM;SAEPjB,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}